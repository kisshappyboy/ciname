<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 配置命名空间，区别名称 -->
<mapper namespace="com.tosit.cinema.dao.OrderDao">
    <!-- SQL片段 -->
    <sql id="cols">oId,price,payTime,selectedSeats,count,totalPrice</sql>

    <!-- 中间，对象的属性和结果集的字段之间的对应关系 -->
    <resultMap type="Orders" id="ordersRM">
        <!-- 主键映射 -->
        <id property="oId" column="oId"/>
        <!-- 普通字段 property指实体的属性；column结果集的字段名称 -->
        <result property="price" column="price"/>
        <result property="payTime" column="payTime"/>
        <result property="selectedSeats" column="selectedSeats"/>
        <result property="count" column="count"/>
        <result property="totalPrice" column="totalPrice"/>
        <result property="cName" column="cname"/>
        <result property="mName" column="mname"/>
        <result property="beginTime" column="begin"/>
    </resultMap>

    <resultMap type="StateMonth" id="monthRM">
        <!-- 普通字段 property指实体的属性；column结果集的字段名称 -->
        <result property="month" column="month"/>
        <result property="money" column="money"/>
    </resultMap>

    <!-- 关系映射 -->
    <!-- 查询，注意Mybatis中如果有填写集合类型，只填写集合中元素的类型 -->
    <insert id="saveOrder"  parameterType="Orders">
        <selectKey keyProperty="oId" resultType="int" order="BEFORE">
            select S_ORDERS.NEXTVAL from dual
        </selectKey>
        insert into orders(oId,tid,price,payTime,selectedSeats,count,totalPrice) values(#{oId},#{times.tId},#{price},#{payTime},#{selectedSeats},#{count},#{totalPrice})
    </insert>
    
    <select id="findOrderListByUId" parameterType="int" resultMap="ordersRM">
        select distinct o.oId,o.price,o.payTime,o.selectedSeats,o.count,o.totalPrice,t.begin,c.cname,m.mname from orders o,times t,hall h,cinema c,movie m where o.tid = t.tid and t.hid = h.hid and h.cid = c.cid and t.mid = m.mid order by o.paytime desc
    </select>

    <select id="findMonthSellData" resultMap="monthRM">
        select to_char(o.paytime,'MM') month,sum(o.totalprice) money from orders o where to_char(o.paytime,'yyyy') = to_char(sysdate,'yyyy') group by to_char(o.paytime,'MM')
    </select>

 <!--   <select id="getTotalCount" parameterType="map" resultType="long">
        select count(id) from user u
        <where>
            <if test="name!=null">
                and u.name like CONCAT('%',#{name},'%')
            </if>
        </where>
    </select>

    <select id="findPage" parameterType="map" resultType="User">
      select id,name from user u
        <where>
            <if test="name!=null">
                and u.name like CONCAT('%',#{name},'%')
            </if>
        </where>
        limit #{firstResult},#{pageSize}
    </select>

    <select id="getById" parameterType="int" resultType="User">
        select id,name from user u where id=#{id}
    </select>
    <insert id="saveUser" parameterType="User">
        insert into user(name) values(#{name})
    </insert>


    <delete id="deleteById" parameterType="int">
        delete from user where id=#{id}
    </delete>



    <update id="updateUser" parameterType="User">
        update user set name=#{name} where id=#{id}
    </update>-->
</mapper>