<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 配置命名空间，区别名称 -->
<mapper namespace="com.tosit.cinema.dao.MovieDao">
    <!-- SQL片段 -->
    <sql id="cols">mId,mName,mPic,mType,mContent</sql>

    <!-- 中间，对象的属性和结果集的字段之间的对应关系 -->
    <resultMap type="Movie" id="movieRM">
        <!-- 主键映射 -->
        <id property="mId" column="mId"/>
        <!-- 普通字段 property指实体的属性；column结果集的字段名称 -->
        <result property="mName" column="mName"/>
        <result property="mPic" column="mPic"/>
        <result property="mType" column="mType"/>
        <result property="mContent" column="mContent"/>
    </resultMap>


    <!-- 关系映射 -->
    <!-- 查询，注意Mybatis中如果有填写集合类型，只填写集合中元素的类型 -->
    <select id="findHotMovieList" resultMap="movieRM" parameterType="int">
        select
       *
        from movie  where rownum  <![CDATA[<=]]> #{i}
    </select>


    <select id="findAll" resultMap="movieRM">
        select
        *
        from movie
    </select>

    <select id="getTotalCount" resultType="int">
        select
       count(mId)
        from movie
    </select>
    <select id="findPage" resultMap="movieRM" parameterType="object">
        SELECT * FROM
        (
        SELECT A.*, ROWNUM RN
        FROM (SELECT * FROM movie) A
        )
        WHERE RN BETWEEN #{arg0} AND  #{arg1}
    </select>

    <delete id="deleteById" parameterType="int" >
        delete from movie where mId = #{arg0}
    </delete>
    <select id="getById" parameterType="int" resultType="Movie">
        select * from movie m where m.mId=#{mId}
    </select>

    <update id="update" parameterType="Movie" >
        update movie set mName=#{mName} , mType=#{mType},mContent=#{mContent} where mId=#{mId}
    </update>

    <insert id="save" parameterType="Movie">
        <selectKey keyProperty="mId" resultType="int" order="BEFORE">
            select s_movie.nextval from dual
        </selectKey>
        insert into movie (mId,mName,mPic,mType,mContent) values(#{mId},#{mName},#{mPic},#{mType},#{mContent})
    </insert>
 <!--   <select id="getTotalCount" parameterType="map" resultType="long">
        select count(id) from user u
        <where>
            <if test="name!=null">
                and u.name like CONCAT('%',#{name},'%')
            </if>
        </where>
    </select>

    <select id="findPage" parameterType="map" resultType="User">
      select id,name from user u
        <where>
            <if test="name!=null">
                and u.name like CONCAT('%',#{name},'%')
            </if>
        </where>
        limit #{firstResult},#{pageSize}
    </select>

    <select id="getById" parameterType="int" resultType="User">
        select id,name from user u where id=#{id}
    </select>
    <insert id="saveUser" parameterType="User">
        insert into user(name) values(#{name})
    </insert>


    <delete id="deleteById" parameterType="int">
        delete from user where id=#{id}
    </delete>



    <update id="updateUser" parameterType="User">
        update user set name=#{name} where id=#{id}
    </update>-->
</mapper>